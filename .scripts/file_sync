#! /usr/bin/env python3
"""
File Sync
"""
from argparse import ArgumentParser
from pathlib import Path

WORKING_DIR = Path('~/.config/scripts/file-sync/').expanduser().resolve()
WORKING_DIR.mkdir(parents=True, exist_ok=True)

parser = ArgumentParser(description=__doc__)
subparsers = parser.add_subparsers(dest='subparsers')

add_subparser = subparsers.add_parser('add')
add_subparser.add_argument('args',
                           type=str,)

remove_subparser = subparsers.add_parser('remove')
remove_subparser.add_argument('args',
                              type=str,)

ls_subparser = subparsers.add_parser('ls')
ls_subparser.add_argument('-f', '--files', dest='files',
                          action='store_true')
ls_subparser.set_defaults(files=False)
ls_subparser.add_argument('-d', '--dirs', dest='dirs',
                          action='store_true')
ls_subparser.set_defaults(dirs=False)

systemd_subparser = subparsers.add_parser('systemd')
systemd_subparser.add_argument('--profile',
                               type=str,
                               required=True)

args = parser.parse_args()


if __name__ == "__main__":
    # if args.add_files or args.add_dir or args.remove_files or args.ls_files \
    #         or args.ls_dirs or args.ls:
    #     raise ValueError(
    #             "Too many directives. You can only do one of [add_file, " +
    #             "add-dir, remove-file, remove-dir, ls-files, ls-dirs, ls] " +
    #             "at a time.")
    to_sync = WORKING_DIR.joinpath("to_sync.txt")
    if args.subparsers == 'add':
        args = parser.parse_args(['add'])
        with open(to_sync, 'a+') as f:
            path = Path(args.files).expanduser().resolve()
            f.write(str(path))
            f.write('\n')
    elif args.subparsers == 'remove':
        args = parser.parse_args(['remove'])
        path = Path(args.files).expanduser().resolve()
        with open(to_sync, 'r') as f:
            lines = f.readlines()
        with open(to_sync, 'w') as f:
            for line in lines:
                if Path(path) != path:
                    f.write(line)
                    f.write('\n')
    elif args.subparsers == 'ls':
        args = parser.parse_args(['ls'])
        with open(to_sync, 'r') as f:
            lines = f.readlines()
        for line in lines:
            line = line.strip()
            if args.files:
                if Path(line).is_file():
                    print(line)
            elif args.dirs:
                if Path(line).is_dir():
                    print(line)
            else:
                print(line)
    elif args.subparsers == 'systemd':
        args = parser.parse_args(['systemd'])
        pass
